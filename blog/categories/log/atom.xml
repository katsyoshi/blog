<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Log | katsyoshiのめもみたいなもの]]></title>
  <link href="http://katsyoshi.github.io/blog/categories/log/atom.xml" rel="self"/>
  <link href="http://katsyoshi.github.io/"/>
  <updated>2015-02-22T18:45:59+09:00</updated>
  <id>http://katsyoshi.github.io/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[アクセスログをTreasureData.comへ]]></title>
    <link href="http://katsyoshi.github.io/blog/2014/04/11/post-access-log-to-treasure-data/"/>
    <updated>2014-04-11T00:50:27+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2014/04/11/post-access-log-to-treasure-data</id>
    <content type="html"><![CDATA[<p>いいかげん<a href="http://www.treasuredata.com">treasure data</a>を使おうかな。
ということでこの鯖のアクセスログをfluentdを使って保存しようとおもいます。</p>

<p>今回は<a href="https://github.com/treasure-data/td-agent">td-agent</a>を利用せずにgemからインストールしたfluentdを利用します。</p>

<h2>環境</h2>

<p>環境としてUbuntu 12.04を利用しています。</p>

<h2>準備</h2>

<p>事前準備としてユーザ、グループの作成、rubyのインストールを行ないます。</p>

<h3>ユーザ、グループの作成</h3>

<p>以下のコマンドでユーザ、グループの作成を行います。
<code>sh
$ sudo adduser fluentd -s /bin/false
</code>
指示に従って入力するとユーザ、グループが作成されています。
このユーザは<a href="http://qiita.com/shunichi/items/c7744878f5c02eaab18d#2-5">ログインできません</a>。</p>

<h3>Rubyのインストール</h3>

<p>以下のコマンドを入力しRubyのインストールを行ないます。</p>

<p><code>sh
$ sudo aptitude build-dep ruby1.9.3
$ sudo aptitude install git
$ sudo git clone git://github.com/sstephenson/rbenv.git /usr/local/rbenv
$ sudo git clone git://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build
$ export RBENV_ROOT=/usr/local/rbenv
$ export PATH=${RBENV_ROOT}/bin:${PATH}
$ eval "$(rbenv init -)"
</code></p>

<p>ここまで入力したら<code>sudo visudo -f /etc/sudoers.d/00_base</code>と入力し、以下を<a href="http://office.tsukuba-bunko.org/ppoi/entry/systemwide-rbenv">入力してください</a>。</p>

<p><code>sh
Defaults !secure_path
Defaults env_keep += "PATH RBENV_ROOT"
</code></p>

<p>入力したらRuby 2.1.1をインストールします。</p>

<p><code>sh
$ sudo rbenv install 2.1.1
$ sudo rbenv rehash
</code>
でインストール完了です。次にfluentdをインストールします。</p>

<h3>fluentdとプラグインのインストール</h3>

<p>gemでfluentdとtdプラグインのfluent-plugin-tdをインストールします。</p>

<p><code>sh
$ sudo gem install fluentd fluent-plugin-td
</code></p>

<p>つぎに設定ファイル<code>fluentd.conf</code>を作成します。</p>

<p>```xml fluentd.conf
<source>
  type forward
</source></p>

<p><source>
  type tail
  path /var/log/nginx/access.log
  format nginx
  time_format %d/%b/%Y:%H:%M:%S %z
  tag td.nginx.main.access
  pos_file /var/log/fluentd/main_access.pos
</source></p>

<p><match td.**.*>
  type copy
  <store></p>

<pre><code>type stdout
</code></pre>

<p>  </store>
  <store></p>

<pre><code>type tdlog
endpoint api.treasure-data.com
apikey ここにtdのAPIキーを入力してね
auto_create_table
buffer_type file
buffer_path /var/log/fluentd/buffer/td
use_ssl true
</code></pre>

<p>  </store>
</match>
```</p>

<p>作成後起動確認を行なってください <code>fluentd -c fluentd.conf</code> 。
起動確認を行ったら <code>fluentd.conf</code> を <code>/etc/fluentd/fluentd.conf</code> に移動します。
これで終了です。</p>

<h3>init.dスクリプトの作成</h3>

<p>まず <code>/etc/init.d/skelton</code> を <code>/etc/init.d/fluentd</code> にコピーします。
コピーしたら以下の様にします。</p>

<p>```diff fluentd_diff_skelton
diff &mdash;git a/etc/init.d/skeleton b/fluentd
old mode 100644
new mode 100755
index dac9480..c59505e
&mdash;&ndash; a/etc/init.d/skeleton
+++ b/fluentd
@@ -1,6 +1,6 @@
 #! /bin/sh
 ### BEGIN INIT INFO
&ndash;# Provides:          skeleton
+# Provides:          fleuntd
 # Required-Start:    $remote_fs $syslog
 # Required-Stop:     $remote_fs $syslog
 # Default-Start:     2 3 4 5
@@ -19,19 +19,14 @@</p>

<p> # PATH should only include /usr/* if it runs after the mountnfs.sh script
 PATH=/sbin:/usr/sbin:/bin:/usr/bin
-DESC=&ldquo;Description of the service&rdquo;
-NAME=daemonexecutablename
-DAEMON=/usr/sbin/$NAME
-DAEMON_ARGS=&ldquo;&mdash;options args&rdquo;
-PIDFILE=/var/run/$NAME.pid</p>

<h2>-SCRIPTNAME=/etc/init.d/$NAME</h2>

<p>&ndash;# Exit if the package is not installed
&ndash;[ -x &ldquo;$DAEMON&rdquo; ] || exit 0
+NAME=fluentd</p>

<p> # Read configuration variable file if it is present
 [ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME</p>

<p>+# Exit if the package is not installed
+[ -x &ldquo;$DAEMON&rdquo; ] || exit 0
+
 # Load the VERBOSE setting and other rcS variables
 . /lib/init/vars.sh</p>

<p>@@ -49,10 +44,11 @@ do_start()
  #   0 if daemon has been started
  #   1 if daemon was already running
  #   2 if daemon could not be started
&ndash;    start-stop-daemon &mdash;start &mdash;quiet &mdash;pidfile $PIDFILE &mdash;exec $DAEMON &mdash;test > /dev/null \
+    start-stop-daemon &mdash;start &mdash;quiet &mdash;pidfile $PIDFILE &mdash;exec $DAEMON \
+    ${START_STOP_DAEMON_ARGS} &mdash;test > /dev/null \</p>

<pre><code>  || return 1
</code></pre>

<ul>
<li> start-stop-daemon &mdash;start &mdash;quiet &mdash;pidfile $PIDFILE &mdash;exec $DAEMON &mdash; \</li>
<li><pre><code> $DAEMON_ARGS \
</code></pre></li>
<li> start-stop-daemon &mdash;start &mdash;quiet &mdash;pidfile $PIDFILE &mdash;exec $DAEMON \</li>
<li><pre><code> ${START_STOP_DAEMON_ARGS} -- $DAEMON_ARGS \
</code></pre>

  || return 2

<h1>Add code here, if necessary, that waits for the process to be ready</h1>

<h1>to handle requests from services started subsequently which depend</h1>

<p>```</p></li>
</ul>


<p>このままでは起動しないので <code>/etc/default/fluentd</code> を作成します。</p>

<p>```sh fluentd.default
RBENV_ROOT=/usr/local/rbenv
PATH=${RBENV_ROOT}/bin:${PATH}
eval &ldquo;$(rbenv init &ndash;)&rdquo;
USER=fluentd
GROUP=fluentd
DESC=&ldquo;fluentd&rdquo;
PIDFILE=/var/log/$NAME/run.pid
CONFFILE=/etc/fluentd/fluentd.conf
DAEMON=/usr/local/rbenv/shims/fluentd
DAEMON_ARGS=&ldquo;&mdash;daemon $PIDFILE &mdash;log /var/log/fluentd/fluentd.log &mdash;config $CONFFILE&rdquo;
SCRIPTNAME=/etc/init.d/$NAME
START_STOP_DAEMON_ARGS=&ldquo;&rdquo;</p>

<p>if [ -n &ldquo;${USER}&rdquo; ]; then
   if ! getent passwd | grep -q &ldquo;^${USER}:&rdquo;; then</p>

<pre><code>  echo "$0: user for running td-agent doesn't exist: ${USER}" &gt;&amp;2
  exit 1
</code></pre>

<p>   fi
   if [ ! -d $(dirname ${PIDFILE}) ]; then</p>

<pre><code>   mkdir -p $(dirname ${PIDFILE})
</code></pre>

<p>   fi
   chown -R ${USER} $(dirname ${PIDFILE})
   START_STOP_DAEMON_ARGS=&ldquo;${START_STOP_DAEMON_ARGS} -c ${USER}&rdquo;
fi</p>

<p>if [ -n &ldquo;${GROUP}&rdquo; ]; then
   if ! getent group | grep -q &ldquo;^${GROUP}:&rdquo;; then</p>

<pre><code>   echo "$0: group for running td-agent doesn't exist: ${GROUP}" &gt;&amp;2
   exit 1
</code></pre>

<p>   fi
   START_STOP_DAEMON_ARGS=&ldquo;${START_STOP_DAEMON_ARGS} &mdash;group ${GROUP}&rdquo;
fi
```</p>

<p>としたら、以下のコマンドを入力し、fluentdデーモンを起動します。</p>

<p><code>sh
$ sudo update-rc.d fluentd defaults
$ sudo mkdir -p /var/log/fluentd
$ sudo chown fluentd:fluentd /var/log/fluentd
$ sudo service fluentd start
</code></p>

<p>で起動してるはずでう。</p>

<h2>おわり</h2>

<p>いくつかアクセスしてみてなげられてるのを確認できたらねます。
最後に<a href="http://katsyoshi.doorkeeper.jp/events/10420">さけまつり</a>やるかもしれないのできてみてくだしあ。</p>
]]></content>
  </entry>
  
</feed>
