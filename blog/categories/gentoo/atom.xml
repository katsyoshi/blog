<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gentoo | katsyoshiのめもみたいなもの]]></title>
  <link href="http://katsyoshi.github.io/blog/categories/gentoo/atom.xml" rel="self"/>
  <link href="http://katsyoshi.github.io/"/>
  <updated>2015-02-22T18:45:59+09:00</updated>
  <id>http://katsyoshi.github.io/</id>
  <author>
    <name><![CDATA[katsyoshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[とりあえずibusやめてみた]]></title>
    <link href="http://katsyoshi.github.io/blog/2015/02/12/remove-ibus/"/>
    <updated>2015-02-12T07:10:29+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2015/02/12/remove-ibus</id>
    <content type="html"><![CDATA[<p><a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#newwindow=1&amp;q=ibus1.5">ibus-1.5</a>からあまり評判がよろしくない(特に不満はない)ので、あたらしく<a href="https://code.google.com/p/fcitx/">fcitx</a>を導入してみた。</p>

<h2>前提条件</h2>

<p>ここでは<a href="http://www.gentoo.org">Gentoo/Linux</a>での導入方法について述べています。
日本語変換エンジンとしてMozcについて述べています。</p>

<h2>導入</h2>

<p>とりあえずfcitxをインストール、設定します。</p>

<p>```sh
$ emerge -av fcitx</p>

<p>$ $EDITOR .xinitrc</p>

<p>export XMODIFIERS=@im=&ldquo;fcitx&rdquo;
export GTK_IM_MODULE=&ldquo;fcitx&rdquo;
export QT_IM_MODULE=&ldquo;fcitx&rdquo;
fcitx
```</p>

<p>これでインストールはこれでおわりです。</p>

<h2>fcitxでmozc</h2>

<p>これは、<a href="http://gpo.zugaina.org/app-i18n/mozc">overlay</a>が提供されいているのでそれで導入します。</p>

<p>```sh
$ $EDITOR /etc/portage/make.conf
USE=&ldquo;fcitx ${USE}&rdquo;</p>

<p>$ sudo emerge -av mozc
```</p>

<p>で、インストールすれば使えるようになります。</p>

<h2>おわり</h2>

<p><a href="http://anond.hatelabo.jp/20150210030728">こういうの</a>があったので、真面目にかこうかと思ったんですがどめんどうなので導入メモになりました。</p>

<p>あと引越ししたので贈っていただいてもいいんですよ？
<a href="http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/">http://www.amazon.co.jp/registry/wishlist/V0YZPO1OYFH5/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerではまってます]]></title>
    <link href="http://katsyoshi.github.io/blog/2014/10/01/pitfall-in-docker/"/>
    <updated>2014-10-01T21:11:04+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2014/10/01/pitfall-in-docker</id>
    <content type="html"><![CDATA[<p>タイトルのとおりです。
Gentoo/LinuxでDockerが起動しないのでとりあえずメモ。</p>

<h2>インストール</h2>

<p>dockerの<a href="https://docs.docker.com/installation/gentoolinux/">Gentooインストールページ</a>を参考に<a href="https://github.com/tianon/docker-overlay">overlay</a>を導入します。</p>

<p><code>sh
$ sudo layman -a docker
$ sudo eix-sync
$ sudo emerge -av app-emulators/docker
</code></p>

<p>ここでカーネルオプションの警告が出るのでひとつひとつ潰しておきます。</p>

<h2>起動</h2>

<p>インストールおわったら、起動させますが、以下のようなログが出てるので起動できません。</p>

<p><code>
2014/10/01 18:39:17 docker daemon: 1.1.2 d84a070; execdriver: native; graphdriver:
[6c541422] +job serveapi(unix:///var/run/docker.sock)
[6c541422] +job initserver()
[6c541422.initserver()] Creating server
[6c541422] +job init_networkdriver()
[6c541422.init_networkdriver()] creating new bridge for docker0
package not installed
[6c541422] -job init_networkdriver() = ERR (1)
package not installed
[6c541422] -job initserver() = ERR (1)
2014/10/01 18:39:17 package not installed
</code></p>

<p>このときは <code>bridge-utils</code> をインストールすればいいのかなと思ってたら、インストールしても解決できないです。</p>

<h2>おわり</h2>

<p>どなたか助けてくだされ〜</p>

<h2>追記</h2>

<p>再構築したカーネルをインストールしてなかったというオチでした。</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo LinuxむけのJubatusパッケージ書いたよ]]></title>
    <link href="http://katsyoshi.github.io/blog/2014/09/12/jubatus-in-gentoo/"/>
    <updated>2014-09-12T12:29:20+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2014/09/12/jubatus-in-gentoo</id>
    <content type="html"><![CDATA[<p><a href="/blog/2014/08/20/gentoo-install-battle-part-i/">PC</a>を<a href="/blog/2014/08/21/gentoo-install-battle-part-ii/">買い替えた</a>ので<a href="/blog/2014/08/31/gentoo-install-battle-part-iii/">環境構築</a>してます。
<a href="https://github.com/kazuki/overlay/tree/master/sci-calculators/jubatus">Jubatusのoverlay</a>があったのですが、古かったので新しく<a href="https://github.com/katsyoshi/overlay">Jubatusのoverlay</a>作成しました。</p>

<h2>インストール</h2>

<p>これは、以下のコマンドでインストールができます。</p>

<p>```sh</p>

<h1>curl <a href="https://raw.githubusercontent.com/katsyoshi/overlay/master/profiles/layman.xml">https://raw.githubusercontent.com/katsyoshi/overlay/master/profiles/layman.xml</a> > /etc/layman/overlays/katsyoshi.xml</h1>

<h1>layman -f -a katsyoshi</h1>

<h1>eix-sync</h1>

<h1>emerge -av jubatus</h1>

<p>```</p>

<p>でいけるとおもいます。</p>

<h2>未実装</h2>

<ul>
<li>jubatus_coreのオプションがはたらいてない(ハズ)</li>
<li>jubatus_msgpack-rpcの依存パッケージにdev-libs/msgpackをいれていない</li>
<li>jubatusのオプションを確認していない</li>
</ul>


<p>などなどあるので、PRまってます。</p>

<h2>まとめ</h2>

<p><a href="https://github.com/kazuki/overlay/">よくみたら</a>必要なライブラリのパッケージもあったのでこれのバージョンとjubatus_core追加するだけでよかったかも。</p>

<p>ちゃんちゃん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo Install Battle Part III]]></title>
    <link href="http://katsyoshi.github.io/blog/2014/08/31/gentoo-install-battle-part-iii/"/>
    <updated>2014-08-31T10:47:14+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2014/08/31/gentoo-install-battle-part-iii</id>
    <content type="html"><![CDATA[<p>これ<a href="/blog/2014/08/20/gentoo-install-battle-part-i/">まで</a>の<a href="/blog/2014/08/21/gentoo-install-battle-part-ii/">流れ</a>で準備が整ったので、Installを始めます。</p>

<h2>インストール</h2>

<p>これは<a href="http://wiki.gentoo.org/">Gentoo Wiki</a>を見ながらで大丈夫です。</p>

<h3>嵌ったところ</h3>

<p>音が鳴らないという問題が発生しました。<a href="http://pocke.hatenablog.com/entry/2014/02/02/100636">理由</a>は簡単でしたのですぐに設定しました。</p>

<p>つぎにネットワークの設定をnetmountからNetworkManagerに変更しました。
設定は<a href="http://wiki.gentoo.org/wiki/NetworkManager">ここ</a>で行なえばよいです。</p>

<p>最後にibus-mozcをインストールして終りです。</p>

<h2>mikutter</h2>

<p>GentooInstallBattleはmikutterをインストールしてtweetすることなのでmikutterをインストールします。
ここではrbenvを利用してmikutterのインストールします。
まずはrbenvとruby-buildをインストールします。</p>

<p><code>sh
$ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</code></p>

<p>つぎにrbenvの設定を行います。以下の設定を<code>~/.bashrc</code>あたりに追記してください</p>

<p><code>sh
export PATH=~/.rbenv/bin:$PATH
eval "$(rbenv init -)"
</code></p>

<p>Rubyのインストールは<code>rbenv install 2.1.2</code>でインストールします。
最後にmikutterをダウンロードし、環境を構築します。</p>

<p><code>sh
$ git clone https://github.com/mikutter/mikutter.git ~/mikutter
$ cd ~/mikutter
$ bundle install
$ bundle exec ruby mikutter.rb
</code></p>

<p>でインストール終了!!
これで快適なmikutterライフがておくれますね。</p>

<p><img src="/images/photo/mikutter.png" alt="mikutter" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gentoo Install Battle Part II]]></title>
    <link href="http://katsyoshi.github.io/blog/2014/08/21/gentoo-install-battle-part-ii/"/>
    <updated>2014-08-21T20:01:51+09:00</updated>
    <id>http://katsyoshi.github.io/blog/2014/08/21/gentoo-install-battle-part-ii</id>
    <content type="html"><![CDATA[<p>X240の準備は終ったので、<a href="http://wiki.gentoo.org/wiki/Quick_install_guide">インストール</a>します。基本的にはこの流れです。</p>

<h2>USBブート</h2>

<p><a href="/blog/2014/08/20/gentoo-install-battle-part-i/">作成したUSBメモリ</a>をX240に差して起動します。
起動したら、まずパーティションの設定を行います。</p>

<p><code>sh
$ gpart /dev/sda
</code></p>

<p>で不要なパーティションを削除し、必要なパーティションを作成します。</p>

<h2>無線LAN</h2>

<p>ネットワークを接続しますが、今回は無線LANを利用してインストールを行います。</p>

<p>まず、どこか適当な位置に<a href="http://www.xmisao.com/2014/01/16/how-to-connect-wpa2-wireless-lan-using-wpa-supplicant.html">リンク先</a>のファイルを作成してください。</p>

<p>次に以下のコマンドを実行します。</p>

<p><code>sh
$ wpa_supplicant -Dnl80211 -ieth0 -c/path/to/supplicant.config
</code></p>

<p>実行したら、接続されているのでATL + F2とかでコンソールの表示を変更してください。</p>

<h2>おわり</h2>

<p>有線のLANケーブルがなかったからはまった。
続きは明日以降に…</p>
]]></content>
  </entry>
  
</feed>
